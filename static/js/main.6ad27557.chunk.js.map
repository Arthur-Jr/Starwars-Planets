{"version":3,"sources":["Images/gitHubIcon.svg","Images/linkedinIcon.svg","context/PlanetContext.js","globalFuncs/SortFunc.js","context/PlanetProvider.js","globalFuncs/capitalizeString.js","component/TableBody.jsx","component/Table.jsx","controlled components/Input.jsx","globalFuncs/RemoveUnderline.js","controlled components/Select.jsx","component/Sort.jsx","component/Filter.jsx","component/Footer.jsx","component/SelectedFilters.jsx","pages/MainPage.js","App.js","index.js"],"names":["module","exports","PlanetContext","createContext","sortOptions","string","number","sortFunc","array","order","column","sort","some","option","a","b","parseInt","ASC","DESC","PlanetProvider","children","useState","data","setData","comparison","value","columnFilter","setColumnFilter","filterByName","name","filterByNumericValues","filters","setFilter","columnOptions","modifyColumnOptions","filtredData","setFiltredData","planets","setPlanets","useEffect","filtredPlanets","forEach","filter","planet","toLowerCase","includes","Provider","capitalizeString","charAt","toUpperCase","slice","TableBody","useContext","map","index","films","created","edited","url","values","Object","key","index2","data-testid","Table","Input","placeHolder","type","handleChange","testId","min","id","text","max","htmlFor","onChange","placeholder","defaultProps","removeUnderline","replace","Select","options","Sort","selectedSort","setSort","target","onSubmit","e","preventDefault","className","Filter","inputName","comparisonOptions","newColumns","splice","indexOf","console","log","removeColumnOptions","disabled","length","Footer","openSocial","window","open","onClick","src","gitIcon","alt","linkedinIcon","SelectedFilters","newFiltredArray","handleClick","Main","fetch","then","response","json","results","residents","getPlanets","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ad27557.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gitHubIcon.f25d8a38.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedinIcon.65220039.svg\";","import { createContext } from 'react';\n\nconst PlanetContext = createContext();\n\nexport default PlanetContext;\n","const NEGATIVE = -1;\nexport const sortOptions = {\n  string: ['name', 'climate', 'gravity', 'terrain'],\n  number: [\n    'rotation_period', 'orbital_period', 'diameter', 'surface_water', 'population',\n  ],\n};\n\nfunction ASC(array, column) {\n  if (sortOptions.string.some((option) => option === column)) {\n    return array.sort((a, b) => {\n      if (a[column] > b[column]) {\n        return 1;\n      }\n      if (a[column] < b[column]) {\n        return NEGATIVE;\n      }\n      return 0;\n    });\n  }\n  if (sortOptions.number.some((option) => option === column)) {\n    return array.sort((a, b) => {\n      if (parseInt(a[column], 10) > parseInt(b[column], 10)) {\n        return 1;\n      }\n      if (parseInt(a[column], 10) < parseInt(b[column], 10)) {\n        return NEGATIVE;\n      }\n      return 0;\n    });\n  }\n}\n\nfunction DESC(array, column) {\n  if (sortOptions.string.some((option) => option === column)) {\n    return array.sort((a, b) => {\n      if (b[column] > a[column]) {\n        return 1;\n      }\n      if (b[column] < a[column]) {\n        return NEGATIVE;\n      }\n      return 0;\n    });\n  }\n  if (sortOptions.number.some((option) => option === column)) {\n    return array.sort((a, b) => {\n      if (parseInt(b[column], 10) > parseInt(a[column], 10)) {\n        return 1;\n      }\n      if (parseInt(b[column], 10) < parseInt(a[column], 10)) {\n        return NEGATIVE;\n      }\n      return 0;\n    });\n  }\n}\n\nfunction sortFunc(array, order) {\n  const { column, sort } = order;\n  if (sort === 'ASC') {\n    return ASC(array, column);\n  }\n  return DESC(array, column);\n}\n\nexport default sortFunc;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetContext from './PlanetContext';\nimport sortFunc from '../globalFuncs/SortFunc';\n\nfunction PlanetProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [columnFilter, setColumnFilter] = useState({\n    column: 'population',\n    comparison: 'Greater',\n    value: '',\n  });\n  const [filters, setFilter] = useState({\n    filterByName: {\n      name: '',\n    },\n    filterByNumericValues: [],\n    order: {\n      column: 'name',\n      sort: 'ASC',\n    },\n  });\n  const [columnOptions, modifyColumnOptions] = useState([\n    'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water',\n  ]);\n  const [filtredData, setFiltredData] = useState([]);\n  const [planets, setPlanets] = useState([]);\n\n  useEffect(() => {\n    let filtredPlanets = [...data];\n    filters.filterByNumericValues.forEach(({ comparison, column, value }) => {\n      switch (comparison) {\n      case 'Greater':\n        filtredPlanets = [...filtredPlanets\n          .filter((planet) => parseInt(planet[column], 10) > parseInt(value, 10))];\n        break;\n      case 'Equal':\n        filtredPlanets = [...filtredPlanets\n          .filter((planet) => parseInt(planet[column], 10) === parseInt(value, 10))];\n        break;\n      case 'Lesser':\n        filtredPlanets = [...filtredPlanets\n          .filter((planet) => parseInt(planet[column], 10) < parseInt(value, 10))];\n        break;\n      default:\n        return null;\n      }\n    });\n    setFiltredData(filtredPlanets);\n  }, [filters.filterByNumericValues, data]);\n\n  useEffect(() => {\n    setPlanets(sortFunc(filtredData, filters.order));\n    setPlanets(filtredData\n      .filter((planet) => planet.name.toLowerCase()\n        .includes(filters.filterByName.name.toLowerCase())));\n  }, [filters.filterByName.name, filtredData, filters.order]);\n\n  return (\n    <PlanetContext.Provider\n      value={\n        {\n          data,\n          setData,\n          filters,\n          setFilter,\n          filtredData,\n          setFiltredData,\n          planets,\n          setPlanets,\n          columnOptions,\n          modifyColumnOptions,\n          columnFilter,\n          setColumnFilter }\n      }\n    >\n      {children}\n    </PlanetContext.Provider>\n  );\n}\n\nPlanetProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default PlanetProvider;\n","function capitalizeString(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport default capitalizeString;\n","import React, { useContext } from 'react';\nimport PlanetContext from '../context/PlanetContext';\nimport capitalizeString from '../globalFuncs/capitalizeString';\n\nfunction TableBody() {\n  const { planets } = useContext(PlanetContext);\n  const CLIMATE_INDEX = 4;\n  const TERRAIND_INDEX = 6;\n\n  return (\n    <tbody>\n      {planets.map((planet, index) => {\n        delete planet.films;\n        delete planet.created;\n        delete planet.edited;\n        delete planet.url;\n        const values = Object.values(planet);\n        return (\n          <tr key={ index }>\n            {values.map((value, index2) => (\n              <td\n                key={ index2 }\n                data-testid={ index2 === 0 ? 'planet-name' : 'infos' }\n              >\n                { index2 === CLIMATE_INDEX\n                || index2 === TERRAIND_INDEX ? capitalizeString(value) : value }\n              </td>\n            ))}\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n}\n\nexport default TableBody;\n","import React from 'react';\nimport TableBody from './TableBody';\n\nfunction Table() {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Orbital Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surfacer Water</th>\n          <th>Population</th>\n        </tr>\n      </thead>\n      <TableBody />\n    </table>\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Input({ placeHolder, type,\n  handleChange, name, testId, min, value, id, text, max }) {\n  return (\n    <label htmlFor={ id }>\n      <input\n        type={ type }\n        onChange={ handleChange }\n        name={ name }\n        id={ id }\n        data-testid={ testId }\n        placeholder={ placeHolder }\n        min={ min }\n        value={ value }\n        max={ max }\n      />\n      {text}\n    </label>\n  );\n}\n\nInput.defaultProps = {\n  testId: '',\n  min: 0,\n  text: '',\n  placeHolder: '',\n  max: 0,\n};\n\nInput.propTypes = {\n  text: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  testId: PropTypes.string,\n  min: PropTypes.number,\n  value: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  placeHolder: PropTypes.string,\n  max: PropTypes.number,\n};\n\nexport default Input;\n","function removeUnderline(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1).replace('_', ' ');\n}\n\nexport default removeUnderline;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport removeUnderline from '../globalFuncs/RemoveUnderline';\n\nfunction Select({ name, testId, handleChange, options, text, value }) {\n  return (\n    <label htmlFor={ name }>\n      {`${text}: `}\n      <select\n        value={ value }\n        name={ name }\n        id={ name }\n        data-testid={ testId }\n        onChange={ handleChange }\n      >\n        {options.map((option, index) => (\n          <option key={ index } value={ option }>{ removeUnderline(option) }</option>\n        ))}\n      </select>\n    </label>\n  );\n}\n\nSelect.defaultProps = {\n  testId: '',\n  options: [],\n  value: '',\n};\n\nSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  testId: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default Select;\n","import React, { useContext, useState } from 'react';\nimport PlanetContext from '../context/PlanetContext';\nimport Input from '../controlled components/Input';\nimport Select from '../controlled components/Select';\nimport { sortOptions } from '../globalFuncs/SortFunc';\n\nfunction Sort() {\n  const [selectedSort, setSort] = useState({\n    column: 'name',\n    sort: 'ASC',\n  });\n\n  const {\n    filters,\n    setFilter,\n  } = useContext(PlanetContext);\n\n  const handleChange = ({ target: { name, value } }) => {\n    setSort({\n      ...selectedSort,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFilter({\n      ...filters,\n      order: selectedSort,\n    });\n  };\n\n  const { string, number } = sortOptions;\n\n  return (\n    <form onSubmit={ handleSubmit } className=\"sort-form\">\n      <Select\n        name=\"column\"\n        testId=\"column-sort\"\n        options={ [...string, ...number] }\n        text=\"Sort Options\"\n        handleChange={ handleChange }\n        value={ selectedSort.column }\n      />\n      <section className=\"radio-section\">\n        <Input\n          text=\"Asc\"\n          type=\"radio\"\n          name=\"sort\"\n          testId=\"column-sort-input-asc\"\n          value=\"ASC\"\n          id=\"asc\"\n          handleChange={ handleChange }\n        />\n        <Input\n          text=\"Desc\"\n          type=\"radio\"\n          name=\"sort\"\n          testId=\"column-sort-input-desc\"\n          value=\"DESC\"\n          id=\"des\"\n          handleChange={ handleChange }\n        />\n      </section>\n      <button\n        type=\"submit\"\n        data-testid=\"column-sort-button\"\n        className=\"form-button\"\n      >\n        Sort\n      </button>\n    </form>\n  );\n}\n\nexport default Sort;\n","import React, { useContext, useState } from 'react';\nimport PlanetContext from '../context/PlanetContext';\nimport Input from '../controlled components/Input';\nimport Select from '../controlled components/Select';\nimport Sort from './Sort';\n\nfunction Filter() {\n  const {\n    filters,\n    setFilter,\n    columnOptions,\n    modifyColumnOptions,\n    columnFilter,\n    setColumnFilter,\n  } = useContext(PlanetContext);\n  const { filterByNumericValues, filterByName: { name: inputName } } = filters;\n  const [comparisonOptions] = useState(['Greater', 'Equal', 'Lesser']);\n\n  const handleChange = ({ target: { value, name } }) => {\n    setColumnFilter({\n      ...columnFilter,\n      [name]: value,\n    });\n  };\n\n  const handleNameFilter = ({ target: { value } }) => {\n    setFilter({\n      ...filters,\n      filterByName: {\n        name: value,\n      },\n    });\n  };\n\n  const removeColumnOptions = () => {\n    const newColumns = [...columnOptions];\n    newColumns.splice(newColumns.indexOf(columnFilter.column), 1);\n    modifyColumnOptions(newColumns);\n    setColumnFilter({ ...columnFilter, column: newColumns[0], value: '' });\n    console.log(newColumns);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFilter({\n      ...filters,\n      filterByNumericValues: [\n        ...filterByNumericValues,\n        columnFilter,\n      ],\n    });\n    removeColumnOptions();\n  };\n\n  return (\n    <header className=\"header\">\n      <h1 className=\"title\">Planet Finder</h1>\n      <section className=\"textFilter-section\">\n        <Input\n          placeHolder=\"Search\"\n          type=\"text\"\n          name=\"search-name\"\n          id=\"search-name\"\n          testId=\"name-filter\"\n          handleChange={ handleNameFilter }\n          value={ inputName }\n        />\n      </section>\n      <form onSubmit={ handleSubmit } className=\"filter-form\">\n        <Select\n          name=\"column\"\n          testId=\"column-filter\"\n          options={ columnOptions }\n          text=\"Column Filter\"\n          handleChange={ handleChange }\n          value={ columnFilter.column }\n        />\n        <Select\n          name=\"comparison\"\n          testId=\"comparison-filter\"\n          options={ comparisonOptions }\n          text=\"Comparison Filter\"\n          handleChange={ handleChange }\n          value={ columnFilter.comparison }\n        />\n        <Input\n          placeHolder=\"Set a value\"\n          type=\"number\"\n          name=\"value\"\n          id=\"value\"\n          testId=\"value-filter\"\n          handleChange={ handleChange }\n          value={ columnFilter.value }\n          max={ 1000000000000 }\n        />\n        <button\n          type=\"submit\"\n          data-testid=\"button-filter\"\n          disabled={ columnOptions.length === 0 || columnFilter.value.length === 0 }\n          className=\"form-button\"\n        >\n          Search\n        </button>\n      </form>\n      <section className=\"sort-section\">\n        <Sort />\n      </section>\n    </header>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\nimport gitIcon from '../Images/gitHubIcon.svg';\nimport linkedinIcon from '../Images/linkedinIcon.svg';\n\nfunction Footer() {\n  function openSocial(url) {\n    window.open(url, '_blank');\n  }\n\n  return (\n    <footer className=\"main-footer\" data-testid=\"footer\">\n      <button\n        type=\"button\"\n        onClick={ () => openSocial('https://github.com/Arthur-Jr') }\n        data-testid=\"social-icon\"\n      >\n        <img src={ gitIcon } alt=\"github icon\" />\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={ () => openSocial('https://www.linkedin.com/in/arthur-jr/') }\n        data-testid=\"social-icon\"\n      >\n        <img src={ linkedinIcon } alt=\"linkedin icon\" />\n      </button>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport PlanetContext from '../context/PlanetContext';\nimport removeUnderline from '../globalFuncs/RemoveUnderline';\n\nfunction SelectedFilters() {\n  const {\n    filters,\n    filters: { filterByNumericValues },\n    setFilter,\n    columnOptions,\n    modifyColumnOptions,\n    columnFilter,\n    setColumnFilter,\n  } = useContext(PlanetContext);\n\n  const handleClick = (column) => {\n    const newFiltredArray = filterByNumericValues\n      .filter((filter) => filter.column !== column);\n    setFilter({\n      ...filters,\n      filterByNumericValues: newFiltredArray,\n    });\n    if (columnOptions.length === 0) {\n      setColumnFilter({\n        ...columnFilter,\n        column,\n      });\n    }\n    modifyColumnOptions([...columnOptions, column]);\n  };\n\n  return (\n    <div className=\"selectedFilters-section\">\n      {filterByNumericValues.map(({ column }, index) => (\n        <div key={ index } data-testid=\"filter\" className=\"filter-container\">\n          <span>{ removeUnderline(column) }</span>\n          <button type=\"button\" onClick={ () => handleClick(column) }>X</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default SelectedFilters;\n","import React, { useContext, useEffect } from 'react';\n\nimport PlanetContext from '../context/PlanetContext';\nimport Table from '../component/Table';\nimport Filter from '../component/Filter';\nimport Footer from '../component/Footer';\nimport SelectedFilters from '../component/SelectedFilters';\n\nfunction Main() {\n  const { setData } = useContext(PlanetContext);\n\n  useEffect(() => {\n    async function getPlanets() {\n      try {\n        const URL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n        const { results } = await fetch(URL).then((response) => response.json());\n        results.forEach((planet) => {\n          delete planet.residents;\n        });\n        setData(results);\n      } catch (error) {\n        setData(error);\n      }\n    }\n    getPlanets();\n  }, [setData]);\n\n  return (\n    <main className=\"page-main\">\n      <section className=\"main-section\">\n        <Filter />\n        <SelectedFilters />\n        <Table />\n      </section>\n      <Footer />\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PlanetProvider from './context/PlanetProvider';\nimport Main from './pages/MainPage';\nimport './CSS/App.scss';\n\nfunction App() {\n  return (\n    <PlanetProvider>\n      <Switch>\n        <Route path=\"/starwars-planet-finder\" component={ Main } />\n      </Switch>\n    </PlanetProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}